time="2021-01-22 10:17:36" level=debug msg="playbook called"
time="2021-01-22 10:17:36" level=debug msg="Console output plugin started.\n"
time="2021-01-22 10:17:36" level=debug msg="Shell Filter plugin started.\n"
time="2021-01-22 10:17:36" level=debug msg="LocalYamlInput plugin started."
time="2021-01-22 10:17:36" level=info msg="******************************************************** TASK [LocalYamlCheck : 主机状态检测] ********************************************************"
time="2021-01-22 10:17:36" level=info msg="LocalYaml Input 插件开始执行ssh目标主机状态扫描，并发数： 25"
time="2021-01-22 10:17:36" level=info msg="已完成 0 主机连接测试, 当前GoRoutine数量: 6"
time="2021-01-22 10:17:36" level=info msg="0: Ssh check 127.0.0.1:22 success 耗时: 881.903µs"
time="2021-01-22 10:17:36" level=debug msg="Pipeline started."
time="2021-01-22 10:17:36" level=debug msg="所有配置： map[config:[map[include:./yaml/user.yaml name:user测试] map[include:./yaml/shell.yaml name:shell测试] map[include:./yaml/copy.yaml name:copy测试] map[include:./yaml/image.yaml name:image测试] map[include:./yaml/template.yaml name:template测试] map[include:./yaml/systemd.yaml name:systemd测试] map[include:./yaml/k8s.yaml name:k8s pipeline测试] map[name:Demo测试 shell:echo 'This is Demo Test!' stage:test]] git:map[branch:master depth:1 url:https://github.com/lflxp/helloworld.git] hooks:[map[type:console]] host:[127.0.0.1] remote_port:22 remote_pwd: remote_user:lxp roles:[user vim-go build test image k8s] stage:[build] timeout:360 timeoutexit:true vars:map[alerts:[map[annotations:map[current_value:85] endsAt:2020-09-01 generatorURL:http://www.google.com labels:map[node:127.0.0.1 severity:warning threshold_value:80console] startsAt:2020-08-01 status:firing] map[annotations:map[current_value:99] endsAt:2020-29-01 generatorURL:http://www.google2.com labels:map[node:127.0.0.1 severity:ok threshold_value:88] startsAt:2020-18-01 status:ok]] branch:master info:test only pipelineid:no1 pipelinename:template test pipelineurl:http://www.baidu.com servicename:xp stage:build status:true tags:test title:模板测试]]"
time="2021-01-22 10:17:36" level=info msg="ShellFilter Filter 插件开始执行目标主机Config Playbook，并发数： 5"
time="2021-01-22 10:17:36" level=debug msg="解析yaml结果 Check map[127.0.0.1:success]\n"
time="2021-01-22 10:17:36" level=debug msg="Stage [build]\n"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[user测试] ./yaml/user.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[shell测试] ./yaml/shell.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[copy测试] ./yaml/copy.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[image测试] ./yaml/image.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[template测试] ./yaml/template.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[systemd测试] ./yaml/systemd.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:36" level=info msg="匹配到 include 配置[k8s pipeline测试] ./yaml/k8s.yaml"
time="2021-01-22 10:17:36" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:36" level=debug msg="configs [map[include:./yaml/user.yaml name:user测试] map[include:./yaml/shell.yaml name:shell测试] map[include:./yaml/copy.yaml name:copy测试] map[include:./yaml/image.yaml name:image测试] map[include:./yaml/template.yaml name:template测试] map[include:./yaml/systemd.yaml name:systemd测试] map[include:./yaml/k8s.yaml name:k8s pipeline测试] map[name:Demo测试 shell:echo 'This is Demo Test!' stage:test] map[name:测试user模块 skip:true stage:user terminial:true user:map[delete:false force:false inactive:0 lock:false maximum:0 minimum:0 name:lxp password: status:true unlock:false warning:0]] map[name:111111111111111111111111 shell:hostname stage:build] map[name:非stage测试 shell:whoami stage:what when:map[key:hostname value:hello]] map[ignore:true name:获取go version shell:go version stage:build] map[name:install vim-go plugin shell:{{ .item }} stage:vim-go with_items:[git version uname -a]] map[name:获取主机名 retry:10 shell:{{.item}} stage:test tags:[127.0.0.1] wait:1 with_items:[hostname ip a pwd uname -a]] map[ignore:true name:查看golang信息 retry:3 shell:{{.item}} stage:test terminial:false wait:1 with_items:[systemctl status sshd go version]] map[copy:map[dest:/tmp/{{ .item }} src:{{ .item }}] name:上传文件 stage:test tags:[192.168.0.10 127.0.0.1] with_items:[LICENSE]] map[args:[-v ${PWD}:/998 -e GO111MODULE=on -e GOPROXY=https://goproxy.cn] command:[go version pwd ls -l go build ls -l for i in {1..10};do echo `date`;sleep 1;done] image:golang:1.14-alpine name:gin-template build retry:3 skip:false stage:image tags:[127.0.0.1] wait:1] map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l && pwd docker info docker ps docker images docker build -f Dockerfile -t gintest .] image:docker:dind name:镜像制作 stage:image tags:[127.0.0.1]] map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l docker ps docker stop gin && docker rm gin docker run -d --name gin -p 8080:8080 gintest docker ps] image:docker:dind name:服务部署 stage:image tags:[127.0.0.1]] map[name:性能测试 shell:{{.item}} skip:true stage:image terminial:true with_items:[pwd ls -l /opt/gopath/bin/k6 run test.js]] map[name:template 模板测试 stage:build template:map[dest:/tmp/docker.service src:template.service.j2]] map[ignore:true name:测试systemd stage:test systemd:map[name:docker state:status] terminial:false] map[name:测试systemd stop skip:true stage:test systemd:map[name:docker state:stop] terminial:false] map[git:map[pwd:system url:https://github.com/devopsxp/xp user:root] k8s:[map[command:[sh -c pwd && ls -l && echo \"one\" > /workspace/logs && cat /workspace/logs] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:one] map[args:[echo \"two\" >> /workspace/logs] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:two] map[args:[echo \"three\" >> /workspace/logs && sleep 60] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:three] map[args:[pwd && ls -l && cat /workspace/logs] command:[sh -c] image:centos:7 name:checkout]] name:pod-2020 namespace:default skip:false stage:k8s workspace:/workspace] map[ignore:true name:查看pod list shell:{{.item}} stage:k8s terminial:true with_items:[for x in {1..10};do kubectl get po;sleep 1;done kubectl logs -f pod-2020 -c checkout]]]"
time="2021-01-22 10:17:36" level=debug msg="Config [map[include:./yaml/user.yaml name:user测试] map[include:./yaml/shell.yaml name:shell测试] map[include:./yaml/copy.yaml name:copy测试] map[include:./yaml/image.yaml name:image测试] map[include:./yaml/template.yaml name:template测试] map[include:./yaml/systemd.yaml name:systemd测试] map[include:./yaml/k8s.yaml name:k8s pipeline测试] map[name:Demo测试 shell:echo 'This is Demo Test!' stage:test] map[name:测试user模块 skip:true stage:user terminial:true user:map[delete:false force:false inactive:0 lock:false maximum:0 minimum:0 name:lxp password: status:true unlock:false warning:0]] map[name:111111111111111111111111 shell:hostname stage:build] map[name:非stage测试 shell:whoami stage:what when:map[key:hostname value:hello]] map[ignore:true name:获取go version shell:go version stage:build] map[name:install vim-go plugin shell:{{ .item }} stage:vim-go with_items:[git version uname -a]] map[name:获取主机名 retry:10 shell:{{.item}} stage:test tags:[127.0.0.1] wait:1 with_items:[hostname ip a pwd uname -a]] map[ignore:true name:查看golang信息 retry:3 shell:{{.item}} stage:test terminial:false wait:1 with_items:[systemctl status sshd go version]] map[copy:map[dest:/tmp/{{ .item }} src:{{ .item }}] name:上传文件 stage:test tags:[192.168.0.10 127.0.0.1] with_items:[LICENSE]] map[args:[-v ${PWD}:/998 -e GO111MODULE=on -e GOPROXY=https://goproxy.cn] command:[go version pwd ls -l go build ls -l for i in {1..10};do echo `date`;sleep 1;done] image:golang:1.14-alpine name:gin-template build retry:3 skip:false stage:image tags:[127.0.0.1] wait:1] map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l && pwd docker info docker ps docker images docker build -f Dockerfile -t gintest .] image:docker:dind name:镜像制作 stage:image tags:[127.0.0.1]] map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l docker ps docker stop gin && docker rm gin docker run -d --name gin -p 8080:8080 gintest docker ps] image:docker:dind name:服务部署 stage:image tags:[127.0.0.1]] map[name:性能测试 shell:{{.item}} skip:true stage:image terminial:true with_items:[pwd ls -l /opt/gopath/bin/k6 run test.js]] map[name:template 模板测试 stage:build template:map[dest:/tmp/docker.service src:template.service.j2]] map[ignore:true name:测试systemd stage:test systemd:map[name:docker state:status] terminial:false] map[name:测试systemd stop skip:true stage:test systemd:map[name:docker state:stop] terminial:false] map[git:map[pwd:system url:https://github.com/devopsxp/xp user:root] k8s:[map[command:[sh -c pwd && ls -l && echo \"one\" > /workspace/logs && cat /workspace/logs] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:one] map[args:[echo \"two\" >> /workspace/logs] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:two] map[args:[echo \"three\" >> /workspace/logs && sleep 60] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:three] map[args:[pwd && ls -l && cat /workspace/logs] command:[sh -c] image:centos:7 name:checkout]] name:pod-2020 namespace:default skip:false stage:k8s workspace:/workspace] map[ignore:true name:查看pod list shell:{{.item}} stage:k8s terminial:true with_items:[for x in {1..10};do kubectl get po;sleep 1;done kubectl logs -f pod-2020 -c checkout]]]\n"
time="2021-01-22 10:17:36" level=info msg="******************************************************** Prepare [DockerWorkspace : 镜像工作空间设置] "
time="2021-01-22 10:17:36" level=debug msg="判断docker共享目录是否存在: /opt/gopath/src/github.com/lflxp/initenv/workspace"
time="2021-01-22 10:17:36" level=info msg="准备docker 共享目录完毕: /opt/gopath/src/github.com/lflxp/initenv/workspace"
time="2021-01-22 10:17:36" level=info msg="******************************************************** Prepare [GitClone : https://github.com/lflxp/helloworld.git] "
time="2021-01-22 10:17:40" level=info msg="success git clone: " cmd="git clone https://github.com/lflxp/helloworld.git -b master --depth 1 /opt/gopath/src/github.com/lflxp/initenv/workspace/2bdb0ed8-f231-46bf-9838-8e12d96b8ec7"
time="2021-01-22 10:17:40" level=info msg="准备docker git clone共享目录完毕: /opt/gopath/src/github.com/lflxp/initenv/workspace/2bdb0ed8-f231-46bf-9838-8e12d96b8ec7"
time="2021-01-22 10:17:40" level=debug msg="build stage 允许执行"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 0 当前Stage: build Config信息: map[include:./yaml/user.yaml name:user测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 1 当前Stage: build Config信息: map[include:./yaml/shell.yaml name:shell测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 2 当前Stage: build Config信息: map[include:./yaml/copy.yaml name:copy测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 3 当前Stage: build Config信息: map[include:./yaml/image.yaml name:image测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 4 当前Stage: build Config信息: map[include:./yaml/template.yaml name:template测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 5 当前Stage: build Config信息: map[include:./yaml/systemd.yaml name:systemd测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 6 当前Stage: build Config信息: map[include:./yaml/k8s.yaml name:k8s pipeline测试]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames include"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 7 当前Stage: build Config信息: map[name:Demo测试 shell:echo 'This is Demo Test!' stage:test]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:40" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 8 当前Stage: build Config信息: map[name:测试user模块 skip:true stage:user terminial:true user:map[delete:false force:false inactive:0 lock:false maximum:0 minimum:0 name:lxp password: status:true unlock:false warning:0]]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames user"
time="2021-01-22 10:17:40" level=debug msg="127.0.0.1 stage not equal build 5 != user 4"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 9 当前Stage: build Config信息: map[name:111111111111111111111111 shell:hostname stage:build]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:40" level=debug msg="Role module 111111111111111111111111 Pre running."
time="2021-01-22 10:17:40" level=debug msg="Role module 111111111111111111111111 Before running."
time="2021-01-22 10:17:40" level=info msg="******************************************************** TASK [build : 111111111111111111111111] BY lxp@127.0.0.1 \n"
time="2021-01-22 10:17:40" level=info msg="[Item: hostname] => lxp-VirtualBox\n" 耗时=303.665549ms
time="2021-01-22 10:17:40" level=debug msg="Role module 111111111111111111111111 Hooks Args running.%!(EXTRA []string=[test hook example])"
time="2021-01-22 10:17:40" level=debug msg="钩子函数测试Demo: [[test hook example]]"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 10 当前Stage: build Config信息: map[name:非stage测试 shell:whoami stage:what when:map[key:hostname value:hello]]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:40" level=debug msg="127.0.0.1 stage not equal build 5 != what 4"
time="2021-01-22 10:17:40" level=debug msg="当前步骤: 11 当前Stage: build Config信息: map[ignore:true name:获取go version shell:go version stage:build]"
time="2021-01-22 10:17:40" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:40" level=debug msg="Role module 获取go version Pre running."
time="2021-01-22 10:17:40" level=debug msg="Role module 获取go version Before running."
time="2021-01-22 10:17:40" level=info msg="******************************************************** TASK [build : 获取go version] BY lxp@127.0.0.1 \n"
time="2021-01-22 10:17:41" level=error msg="[Item: go version] => Process exited with status 127" 耗时=288.753453ms
time="2021-01-22 10:17:41" level=debug msg="Role module 获取go version Hooks Args running.%!(EXTRA []string=[test hook example])"
time="2021-01-22 10:17:41" level=debug msg="钩子函数测试Demo: [[test hook example]]"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 12 当前Stage: build Config信息: map[name:install vim-go plugin shell:{{ .item }} stage:vim-go with_items:[git version uname -a]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != vim-go 6"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 13 当前Stage: build Config信息: map[name:获取主机名 retry:10 shell:{{.item}} stage:test tags:[127.0.0.1] wait:1 with_items:[hostname ip a pwd uname -a]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 14 当前Stage: build Config信息: map[ignore:true name:查看golang信息 retry:3 shell:{{.item}} stage:test terminial:false wait:1 with_items:[systemctl status sshd go version]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 15 当前Stage: build Config信息: map[copy:map[dest:/tmp/{{ .item }} src:{{ .item }}] name:上传文件 stage:test tags:[192.168.0.10 127.0.0.1] with_items:[LICENSE]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames copy"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 16 当前Stage: build Config信息: map[args:[-v ${PWD}:/998 -e GO111MODULE=on -e GOPROXY=https://goproxy.cn] command:[go version pwd ls -l go build ls -l for i in {1..10};do echo `date`;sleep 1;done] image:golang:1.14-alpine name:gin-template build retry:3 skip:false stage:image tags:[127.0.0.1] wait:1]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames image"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != image 5"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 17 当前Stage: build Config信息: map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l && pwd docker info docker ps docker images docker build -f Dockerfile -t gintest .] image:docker:dind name:镜像制作 stage:image tags:[127.0.0.1]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames image"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != image 5"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 18 当前Stage: build Config信息: map[args:[-v /var/run/docker.sock:/var/run/docker.sock] command:[ls -l docker ps docker stop gin && docker rm gin docker run -d --name gin -p 8080:8080 gintest docker ps] image:docker:dind name:服务部署 stage:image tags:[127.0.0.1]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames image"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != image 5"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 19 当前Stage: build Config信息: map[name:性能测试 shell:{{.item}} skip:true stage:image terminial:true with_items:[pwd ls -l /opt/gopath/bin/k6 run test.js]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != image 5"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 20 当前Stage: build Config信息: map[name:template 模板测试 stage:build template:map[dest:/tmp/docker.service src:template.service.j2]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames template"
time="2021-01-22 10:17:41" level=debug msg="Role module template 模板测试 Pre running."
time="2021-01-22 10:17:41" level=debug msg="Role module template 模板测试 Before running."
time="2021-01-22 10:17:41" level=info msg="******************************************************** TASK [build : template 模板测试] BY lxp@127.0.0.1 \n"
time="2021-01-22 10:17:41" level=debug msg="template is  <font color=\"info\">[成功] </font>模板测试 \n> 服务名称：<font color=\"comment\">xp</font> \n流水线名称：<font color=\"comment\">template test</font> \n流水线ID：<font color=\"comment\">no1</font> \n流水线地址：<font color=\"comment\">http://www.baidu.com</font> \n构建分支：<font color=\"comment\">master</font> \n阶段：<font color=\"comment\">build</font> \n构建人：<font color=\"comment\"><no value></font> \nCOMMITID：<font color=\"comment\">test</font> \nCOMMITINFO: <font color=\"comment\">test only</font> \n\n\n##  [<font color=\"warning\">warning</font>] 127.0.0.1 [监控详情](http://www.google.com)\n\n>> 告警阈值: <font color=\"warning\">80console</font> \n当前数值: <font color=\"warning\">85</font> \n开始时间: <font color=\"comment\">2020-08-01</font> \n结束时间: <font color=\"comment\">2020-09-01</font>\n\n\n## # [<font color=\"info\">ok</font>] 127.0.0.1 [监控详情](http://www.google2.com)\n\n>> 告警阈值: <font color=\"info\">88</font> \n当前数值: <font color=\"info\">99</font> \n开始时间: <font color=\"comment\">2020-18-01</font> \n结束时间: <font color=\"comment\">2020-29-01</font>\n\n"
time="2021-01-22 10:17:41" level=debug msg="模板文件 /tmp/docker.service 上传成功"
time="2021-01-22 10:17:41" level=info msg="模板上传成功 /tmp/docker.service" dest=/tmp/docker.service template=template.service.j2 耗时=283.946812ms
time="2021-01-22 10:17:41" level=debug msg="Role module template 模板测试 Hooks Args running.%!(EXTRA []string=[test hook example])"
time="2021-01-22 10:17:41" level=debug msg="钩子函数测试Demo: [[test hook example]]"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 21 当前Stage: build Config信息: map[ignore:true name:测试systemd stage:test systemd:map[name:docker state:status] terminial:false]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames systemd"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 22 当前Stage: build Config信息: map[name:测试systemd stop skip:true stage:test systemd:map[name:docker state:stop] terminial:false]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames systemd"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != test 4"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 23 当前Stage: build Config信息: map[git:map[pwd:system url:https://github.com/devopsxp/xp user:root] k8s:[map[command:[sh -c pwd && ls -l && echo \"one\" > /workspace/logs && cat /workspace/logs] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:one] map[args:[echo \"two\" >> /workspace/logs] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:two] map[args:[echo \"three\" >> /workspace/logs && sleep 60] command:[sh -c] env:map[GOPROXY:https://goproxy.cn] image:centos:7 name:three] map[args:[pwd && ls -l && cat /workspace/logs] command:[sh -c] image:centos:7 name:checkout]] name:pod-2020 namespace:default skip:false stage:k8s workspace:/workspace]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames k8s"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != k8s 3"
time="2021-01-22 10:17:41" level=debug msg="当前步骤: 24 当前Stage: build Config信息: map[ignore:true name:查看pod list shell:{{.item}} stage:k8s terminial:true with_items:[for x in {1..10};do kubectl get po;sleep 1;done kubectl logs -f pod-2020 -c checkout]]"
time="2021-01-22 10:17:41" level=debug msg="匹配到 Role 资源池对象 roleNames shell"
time="2021-01-22 10:17:41" level=debug msg="127.0.0.1 stage not equal build 5 != k8s 3"
time="2021-01-22 10:17:41" level=info msg="ConsoleOutput Output 插件开始执行目标主机，并发数： 1"
time="2021-01-22 10:17:41" level=debug msg="console hook send map[127.0.0.1:success]\n"
time="2021-01-22 10:17:41" level=warning msg="127.0.0.1-build-template 模板测试 map[build 127.0.0.1 template 模板测试:模板上传成功 /tmp/docker.service 耗时:287.252762ms]"
time="2021-01-22 10:17:41" level=warning msg="127.0.0.1-build-111111111111111111111111 map[build 127.0.0.1 111111111111111111111111:lxp-VirtualBox\n 耗时:312.242968ms]"
time="2021-01-22 10:17:41" level=warning msg="127.0.0.1-build-获取go version map[build 127.0.0.1 获取go version:Process exited with status 127 耗时:299.145222ms]"
time="2021-01-22 10:17:41" level=warning msg="console日志耗时：8.336239ms"
time="2021-01-22 10:17:41" level=debug msg="LocalYaml Input plugin stopped.\n"
time="2021-01-22 10:17:41" level=debug msg="Shell Filter plugin stopped.\n"
time="2021-01-22 10:17:41" level=debug msg="Console output plugin stopped.\n"
time="2021-01-22 10:17:41" level=debug msg="Pipeline stopped."
time="2021-01-22 10:17:41" level=info msg="Pipeline执行完毕，耗时：4.899755696s"
